<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.workcenter.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="cn.workcenter.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_ch_name" property="roleChName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_userid" property="createUserid" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, role_ch_name, create_time, create_userid, status
  </sql>
  <sql id="r_Base_Column_List" >
    r.id, r.role_name as roleName, r.role_ch_name as roleChName, r.create_time as createTime, r.create_userid as createUserid, r.status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from base_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from base_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.workcenter.model.Role" >
    insert into base_role (id, role_name, role_ch_name, 
      create_time, create_userid, status
      )
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleChName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserid,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.workcenter.model.Role" useGeneratedKeys="true" keyProperty="id">
    insert into base_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleChName != null" >
        role_ch_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserid != null" >
        create_userid,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleChName != null" >
        #{roleChName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.workcenter.model.Role" >
    update base_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleChName != null" >
        role_ch_name = #{roleChName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        create_userid = #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.workcenter.model.Role" >
    update base_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_ch_name = #{roleChName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryRolesBySelective" parameterType="cn.workcenter.model.Role" resultType="cn.workcenter.model.Role">
  	select 
  	<include refid="r_Base_Column_List" />
  	from base_role r
  	<if test="roleName != null" >
      where r.role_name like CONCAT('%',#{roleName},'%') 
    </if>
    <if test="roleChName != null" >
      where r.role_ch_name like CONCAT('%',#{roleChName},'%')
    </if>
    <if test="status != null" >
      where r.status = #{status}
    </if>
  </select>
  
  <update id="updateRoleStatusById" parameterType="java.util.Map">
  	update base_role
  	set status = #{status}
  	where id = #{id}
  </update>
  
  <select id="queryRolesByUserId" parameterType="java.lang.Long" resultType="cn.workcenter.model.Role">
  	select 
  	<include refid="r_Base_Column_List" />
	FROM
	base_role r left join
	base_user_role br
	ON
	br.role_id= r.id
	WHERE
	br.status = '1'
	and r.status= '1'
	and br.user_id = #{id}
  </select>
</mapper>